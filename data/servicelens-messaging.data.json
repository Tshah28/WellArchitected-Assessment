[
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Grid",
    "title": "Azure EventGrid provides a 99.99% uptime SLA"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Grid",
    "title": "In case of a multi-region Azure solution, deploy an Event Grid instance per region."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Grid",
    "title": "In high-throughput scenarios, use batched events. This means that the service will deliver a json array with multiple events to the subscribers, instead of an array with one event. The consuming application must be able to process these arrays."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Grid",
    "title": "Event batches cannot exceed 1MB in size. This means that if the message payload is large, only one or a few messages will fit in the batch. This means that the consuming service will need to process more event batches. If your event has a large payload, consider storing it elsewhere (e.g. blob storage) and passing a reference in the event. When integrating with third-party services through the CloudEvents schema, it is recommended [not to exceed 64kb events](https://github.com/cloudevents/spec/blob/v1.0/spec.md#size-limits)."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Grid",
    "title": "Batch size selection depends on the payload size and the message volume. This should be a configurable parameter and optimizing this should be done during load-testing. "
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Grid",
    "title": "If EventGrid delivers to an endpoint that holds custom code, ensure that the message is accepted with an HTTP 200-204 response only when it can be successfully processed. "
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Grid",
    "title": "Monitor EventGrid for failed event publishing (Publish Failed metric). Additionally, the 'Unmatched' metric will show messages that are published, but not matched to any subscription. Depending on your application architecture, the latter may be intentional."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Grid",
    "title": "Monitor EventGrid for failed event delivery. The 'Delivery Failed' metric will increase every time a message cannot be delivered to an event handler (timeout or a non 200-204 HTTP status code). Additionally, if an event must not be lost, set up a Dead-Letter-Queue (DLQ) storage account. This is where events that cannot be delivered after the maximum retry count will be placed. Optionally, implement a notification system on the DLQ storage account, e.g. by handling a 'new file' event through Event Grid."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "Azure Event Hubs has a [published SLA](https://azure.microsoft.com/support/legal/sla/event-hubs) of 99.95% for the Basic and Standard Tiers, and 99.99% for the Dedicated Tier."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "The number of partitions reflect the degree of downstream parallelism you can achieve. For maximum throughput, use the maximum number of partitions (32) when creating the Event Hub. This will allow you to scale up to 32 concurrent processing entities and will offer the highest send/receive availability."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "In high-throughput scenarios, use batched events. This means that the service will deliver a json array with multiple events to the subscribers, instead of an array with one event. The consuming application must be able to process these arrays."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "As part of your solution-wide availability and disaster recovery strategy, consider enabling the EventHub geo disaster-recovery option. This will allow the creation of a secondary namespace in a different region. Note that only the active namespace receives messages at any time and that messages and events themselves are not replicated to the secondary region. ",
    "context": "Note: The RTO for the regional failover is 'up to 30 minutes'. Confirm this aligns with the requirements of the customer and fits in the broader availability strategy. If a higher RTO is required, consider implementing a client-side failover pattern too."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "When developing new applications, use EventProcessorClient (.Net and Java) or EventHubConsumerClient (Python and Javascript) as the client SDK. EventProcessorHost has been deprecated."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "Every consumer can read events from 1 to 32 partitions. To achieve maximum scale on the side of the consuming application, every consumer should read from a single partition. "
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "Do not publish events to a specific partition. If ordering of events is essential, implement this downstream or use a different messaging service instead."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "Create SendOnly and ListenOnly policies for the event publisher and consumer, respectively."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "When publishing events frequently, use the AMQP protocol when possible. AMQP has higher network costs when initializing the session, however HTTPS requires additional TLS overhead for every request. AMQP has higher performance for frequent publishers."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "When a solution has a large number of independent event publishers, consider using Event Publishers for fine-grained access control. Note that is automatically sets the partition key to the publisher name, so this should only be used if the events originate from all publishers evenly. "
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "When using the Capture feature, carefully consider the configuration of the time window and file size, especially with low event volumes. Data Lake will charge small for a minimal file size for storage (gen1) or minimal transaction size (gen2). This means that if you set the time window so low that the file has not reached minimum size, you will incur a lot of extra cost."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "Ensure each consuming application uses a separate consumer group and only one active receiver per consumer group is in place. "
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "When using the SDK to send events to Event Hubs, ensure the exceptions thrown by the [retry policy](https://docs.microsoft.com/azure/architecture/best-practices/retry-service-specific#event-hubs) (EventHubsException or OperationCancelledException) are properly caught. When using HTTPS, ensure a proper retry pattern is implemented."
  },
  {
    "type": "Supporting Source Artifacts",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Event Hub",
    "title": "Find Event Hub namespaces with 'Basic' SKU:",
    "code": "Resources \n| where type == 'microsoft.eventhub/namespaces'\n| where sku.name == 'Basic'\n| project resourceGroup, name, sku.name\n"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "For Service Bus Queues and Topics, Microsoft guarantees that at least 99.9% of the time, properly configured applications will be able to send or receive messages or perform other operations on a deployed Queue or Topic. [SLA Documentation](https://azure.microsoft.com/support/legal/sla/service-bus)"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "However, when deploying Service Bus with Geo-disaster recovery and in availability zones, the SLO increases dramatically, but does not change the financially backed SLA of 99.9% availability."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "[Partitioned Queues and Topics](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning)"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "[Express Entities](https://docs.microsoft.com/dotnet/api/microsoft.servicebus.messaging.queuedescription.enableexpress)"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "In addition to the documentation on [Service Bus Premium and Standard messaging tiers](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-premium-messaging), these features are only available on the Premium SKU.",
    "children": [
      {
        "title": "Dedicated resources"
      },
      {
        "title": "Virtual network integration: Limits the networks that can connect to the Service Bus instance. Requires Service Endpoints to be enabled on the subnet. There are Trusted Microsoft services that are not supported when Virtual Networks are implemented (i.e., integration with Event Grid) https://docs.microsoft.com/azure/service-bus-messaging/service-bus-service-endpoints"
      },
      {
        "title": "Private endpoints"
      },
      {
        "title": "IP Filtering/Firewall: Restrict connections to only defined IPv4 addresses or IPv4 address ranges"
      },
      {
        "title": "[Availability zones](https://docs.microsoft.com/azure/availability-zones/az-overview): Provides enhanced availability by spreading replicas across availability zones within one region at no additional cost"
      },
      {
        "title": "Event Grid Integration: [Available event types](https://docs.microsoft.com/azure/event-grid/event-schema-service-bus)"
      },
      {
        "title": "Scale Messaging Units"
      },
      {
        "title": "[Geo-Disaster Recovery](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-geo-dr) (paired namespace)"
      },
      {
        "title": "BYOK (Bring Your Own Key): Azure Service Bus encrypts data at rest and automatically decrypts it when accessed, but customers can also bring their own customer-managed key."
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "If you need mission critical messaging with queues/topics, Service Bus Premium is recommended with Geo-Disaster Recovery. Choosing the pattern is dependent on the business requirements and the recovery time objective (RTO)."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "Geo-Disaster",
    "children": [
      {
        "title": "[Active/Active](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-outages-disasters#active-replication)"
      },
      {
        "title": "[Active/Passive](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-outages-disasters#passive-replication)"
      },
      {
        "title": "[Paired Namespace (Active/Passive)](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-geo-dr)"
      },
      {
        "title": "NOTE: the secondary region should preferably be an [Azure paired region](https://docs.microsoft.com/azure/best-practices-availability-paired-regions)."
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "Make the namespace zone redundant (only available with Premium)"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "Review the [Best Practices for performance improvements using Service Bus Messaging](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-performance-improvements)."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "Connect to Service Bus with the AMQP protocol and utilize Service Endpoints or Private Endpoints when possible. This keeps traffic on the Azure Backbone. Note: the default connection protocol for Microsoft.Azure.ServiceBus and Windows.Azure.ServiceBus namespaces is AMQP."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "Ensure that Service Bus messaging exceptions are handled properly.",
    "context": "[Service Bus Messaging Exceptions](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messaging-exceptions)"
  },
  {
    "type": "Supporting Source Artifacts",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "Query to identify Service Bus Instances that are not on the premium tier:",
    "code": "Resources\n| where\n\ttype == 'microsoft.servicebus/namespaces'\n| where\n\tsku.tier != 'Premium'\n"
  },
  {
    "type": "Supporting Source Artifacts",
    "pillars": [
      "reliability"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "Query to identify premium Service Bus Instances that are not zone redundant:",
    "code": "Resources\n| where\n\ttype == 'microsoft.servicebus/namespaces'\n| where\n\tsku.tier == 'Premium'\n\tand properties.zoneRedundant == 'false'\n"
  },
  {
    "type": "Supporting Source Artifacts",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Service Bus",
    "title": "Query to identify premium Service Bus Instances that are not using private endpoints:",
    "code": "Resources\n| where\n\ttype == 'microsoft.servicebus/namespaces'\n| where\n\tsku.tier == 'Premium'\n\tand isempty(properties.privateEndpointConnections)\n"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Storage Queues",
    "title": "Azure Storage Queues follow the SLA statements of the general [Storage Account service](https://azure.microsoft.com/support/legal/sla/storage/v1_5/). Currently (v1.5) this specifies a 99.9% guarantee for LRS, ZRS and GRS accounts and a 99.99% guarantee for RA-GRS (provided that requests to RA-GRS switch to secondary endpoints if there is no success on the primary endpoint)"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Storage Queues",
    "title": "Since Storage Queues are part of the Azure Storage service, please refer to the general storage guidance, in addition to the configuration recommendations mentioned below."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Storage Queues",
    "title": "Using geo-zone-redundant storage (GZRS) or read-access geo-zone-redundant storage (RA-GZRS) will provide 16 nines or durability and will protect against failover if an entire datacenter becomes unavailable. See [Azure Storage redundancy](https://docs.microsoft.com/azure/storage/common/storage-redundancy) for more information."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Storage Queues",
    "title": "For an SLA increase from three to four nines, use geo-redundant storage with read access and configure the client application to fail over to secondary read endpoints if the primary endpoints fail to respond. This consideration should be part of the overall reliability strategy of your solution."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Storage Queues",
    "title": "Refer to the 'Storage' guidance for specifics on data recovery for storage accounts"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Storage Queues",
    "title": "Ensure that for all clients accessing the storage account, a proper [retry policy](https://docs.microsoft.com/azure/architecture/best-practices/retry-service-specific#azure-storage) is implemented."
  },
  {
    "type": "Supporting Source Artifacts",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Storage Queues",
    "title": "Query to identify storage accounts using V1 storage accounts:",
    "code": "Resources\n| where\n\ttype == 'microsoft.storage/storageaccounts'\n\tand kind == 'Storage'\n"
  },
  {
    "type": "Supporting Source Artifacts",
    "pillars": [
      "reliability"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "Storage Queues",
    "title": "Query to identify storage accounts using locally redundant storage (LRS):",
    "code": "Resources\n| where\n\ttype == 'microsoft.storage/storageaccounts'\n\tand sku.name =~ 'Standard_LRS'\n"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "Azure IoT Hub has a [published SLA](https://azure.microsoft.com/support/legal/sla/iot-hub) of 99.9% for the Basic and Standard tiers, there is no SLA for the Free tier."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "The number of Device-to-cloud partitions for the Event Hub-compatible endpoint reflect the degree of downstream parallelism you can achieve. For maximum throughput, use the maximum number of partitions (32) when creating the IoT Hub - if you are planning to use the built-in endpoint. This will allow you to scale up to 32 concurrent processing entities and will offer the highest send/receive availability. This number cannot be changed after creation."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "In high-throughput scenarios, use batched events. This means that the service will deliver an array with multiple events to the consumers, instead of an array with one event. The consuming application must be able to process these arrays."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "As part of your solution-wide availability and disaster recovery strategy, consider using the IoT Hub [cross-region Disaster Recovery option](https://docs.microsoft.com/azure/iot-hub/iot-hub-ha-dr#cross-region-dr). This will move the IoT Hub endpoint to the paired Azure region. Note that only the device registry gets replicated. Events themselves are not replicated to the secondary region.",
    "context": "Note: The RTO for the customer-initiated failover is 'between 10 minutes to a couple of hours'. For a Microsoft-initiated failover the RTO is '2-26 hours'. Confirm this aligns with the requirements of the customer and fits in the broader availability strategy. If a higher RTO is required, consider implementing a client-side failover pattern, too."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "When sending events frequently, use the AMQP or MQTT protocol when possible. AMQP and MQTT have higher network costs when initializing the session, however HTTPS requires additional TLS overhead for every request. AMQP and MQTT have higher performance for frequent publishers."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "When using an SDK to send events to IoT Hubs, ensure the exceptions thrown by the [retry policy](https://docs.microsoft.com/azure/architecture/best-practices/retry-service-specific#iot-hub) (EventHubsException or OperationCancelledException) are properly caught. When using HTTPS, ensure a proper retry pattern is implemented."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "When using message routing feature in IoT Hub, latency of the message delivery increases. On average this [should not exceed 500 ms](https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messages-d2c#latency), but be aware that there is no guarantee for the delivery latency. If you require the minimum possible latency, consider to not use routing and read the events from the built-in endpoint."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "If you are using [X.509 certificates](https://docs.microsoft.com/azure/iot-hub/iot-hub-security-x509-get-started#get-x509-ca-certificates) for the device connection, it is recommended to use only certificates validated by a root CA in production environment. Make sure you have processes in place to update the certificate before they expire."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "Adding more than one IoT Hub per region does not offer additional resiliency as chances are, that all hubs might still run on the same underlying cluster. For scaling reasons it is usually sufficient to increase the tier and/or allocated IoT Hub units."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "If the RTOs offered by either customer- or Microsoft-initiated failover (see above) are not sufficient, it is recommended to provision a second IoT Hub in another region and have routing logic on the device. This can be further enhanced with a 'Concierge Service'. See [here](https://docs.microsoft.com/azure/iot-hub/iot-hub-ha-dr#achieve-cross-region-ha) for more details."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "To avoid telemetry interruption due to throttling / fully used quota, consider adding a [custom auto-scaling solution](https://docs.microsoft.com/azure/iot-hub/iot-hub-scaling#auto-scale)."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub",
    "title": "When reading device telemetry from the built-in Event Hub-compatible endpoint, refer to the recommendation regarding [Event Hub consumers](#Event-Hub) in this document."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Messaging",
    "subCategory": "IoT Hub Device Provisioning Service",
    "title": "Azure IoT Hub Device Provisioning Service has a [published SLA](https://azure.microsoft.com/support/legal/sla/iot-hub) of 99.9%."
  }
]