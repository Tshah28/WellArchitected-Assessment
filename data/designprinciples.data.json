[
    {
        "type": "Design Principles",
        "pillars": [
            "operationalexcellence"
        ],
        "lens": "application",
        "category": "General",
        "subCategory": "Unassigned",
        "title": "Optimize build and release processes",
        "context": "From provisioning with Infrastructure as Code, to build and releases with CI/CD pipelines, to automated testing, embrace software engineering discipline across your entire environment. This approach ensures the creation and management of environments throughout the software development lifecycle is consistent and enables early detection of issues.",
        "id": "dp_opex_1"
    },
    {
        "type": "Design Principles",
        "pillars": [
            "operationalexcellence"
        ],
        "lens": "application",
        "category": "General",
        "subCategory": "Unassigned",
        "title": "Monitor system and operational health",
        "context": "Identify and monitor metrics for build and release processes, infrastructure health, and application health. Telemetry is critical to understanding the health of a workload and whether the service is meeting the business goals.",
        "id": "dp_opex_2"
    },
    {
        "type": "Design Principles",
        "pillars": [
            "operationalexcellence"
        ],
        "lens": "application",
        "category": "General",
        "subCategory": "Unassigned",
        "title": "Rehearse recovery and practice failure",
        "context": "Run DR drills on regular cadence and use chaos engineering practices to identify and remediate weak points in application reliability. Regular rehearsal of failure will validate the effectiveness of recovery processes and ensure teams are familiar with their responsibilities.",
        "id": "dp_opex_3"
    },
    {
        "type": "Design Principles",
        "pillars": [
            "operationalexcellence"
        ],
        "lens": "application",
        "category": "General",
        "subCategory": "Unassigned",
        "title": "Modularize your environment",
        "context": "Systematically componentize your environment and workloads to enable frequent and manageable change that can be progressively rolled-out and safely rolled-back.",
        "id": "dp_opex_4"
    },
    {
        "type": "Design Principles",
        "pillars": [
            "operationalexcellence"
        ],
        "lens": "application",
        "category": "General",
        "subCategory": "Unassigned",
        "title": "Use policy-driven governance",
        "context": "Use Azure Policy to provide guardrails and ensure continued compliance of application environment. This approach to centralized governance enables an organization to provide application teams with sufficient autonomy to accelerate development efforts, while ensuring the enterprise estate remains compliant with organizational standards.",
        "id": "dp_opex_5"
    },
    {
        "type": "Design Principles",
        "pillars": [
            "operationalexcellence"
        ],
        "lens": "application",
        "category": "General",
        "subCategory": "Unassigned",
        "title": "Embrace operational improvement",
        "context": "Continuously evaluate and refine operational procedures and tasks, while striving to reduce complexity and ambiguity. This approach enables an organization to evolve processes over time, optimizing inefficiencies and learning from failures.",
        "id": "dp_opex_6"
    }
]