[
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Firewall",
    "title": "When deployed to a single Availability Zone, Azure Firewall provides a [99.95% SLA](https://azure.microsoft.com/en-us/support/legal/sla/azure-firewall/v1_1/).",
    "recommendation": "",
    "id": "networking_3822"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Firewall",
    "title": "When deployed to two or more Availability Zones, Azure Firewall provides a [99.99% SLA](https://azure.microsoft.com/en-us/support/legal/sla/azure-firewall/v1_1/)",
    "recommendation": "",
    "id": "networking_2134"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Firewall",
    "title": "Use Azure Firewall to govern:",
    "recommendation": "",
    "id": "networking_9186",
    "children": [
      {
        "title": "Azure outbound traffic to the internet",
        "recommendation": "",
        "id": "networking_9502"
      },
      {
        "title": "Non-HTTP/S inbound connections",
        "recommendation": "",
        "id": "networking_1852"
      },
      {
        "title": "East-west traffic filtering (if required by customer)",
        "recommendation": "",
        "id": "networking_4124"
      }
    ]
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Firewall",
    "title": "Use Firewall Manager with Azure Virtual WAN to deploy and manage Azure Firewalls across Azure Virtual WAN Hubs, or in Hub VNets.",
    "recommendation": "",
    "id": "networking_7361"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Firewall",
    "title": "Create a global Azure Firewall policy to govern security posture across the global network environment and assign it to all Azure Firewalls.",
    "recommendation": "",
    "id": "networking_9805",
    "context": "Allow for granular policies to meet requirements of specific regions by delegating incremental Firewall Policies to local security teams via RBAC."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Firewall",
    "title": "Configure supported 3rd party SaaS security providers within Firewall Manager if the customer wishes to use such solutions to protect outbound connections.",
    "recommendation": "",
    "id": "networking_4498"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Virtual Appliances (NVA)",
    "title": "If 3rd party NVAs are required for east-west and/or south-north traffic protection/filtering: ",
    "recommendation": "",
    "id": "networking_1701",
    "children": [
      {
        "title": "For VWAN network topologies, deploy the NVAs to a separate VNet (i.e. NVA VNet) and connect it to the regional Virtual WAN Hub as well as to the \"Landing Zones\" that require access to NVAs as described in this [article](https://docs.microsoft.com/en-us/azure/virtual-wan/virtual-wan-route-table-portal).",
        "recommendation": "",
        "id": "networking_2636"
      },
      {
        "title": "For non-Virtual WAN network topologies, deploy the 3rd party NVAs in the central Hub VNet.",
        "recommendation": "",
        "id": "networking_522"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Virtual Appliances (NVA)",
    "title": "If 3rd party NVAs are required for inbound HTTP/S connections, they should be deployed within a \"Landing Zone\" or \"solution-level\" Virtual Network, together with the applications that they are protecting and exposing to the internet.     ",
    "recommendation": "",
    "id": "networking_9821"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Connectivity",
    "title": "Azure native network security services such as Azure Firewall, Application Gateway, and Azure Front Door are fully managed services, meaning that customers do not incur the operational and management costs associated with infrastructure deployments, which can become complex at scale.",
    "recommendation": "",
    "id": "networking_1814"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Connectivity",
    "title": "Azure PaaS services are typically accessed over public endpoints, however, the Azure platform provides capabilities to secure such endpoints or even make them entirely private.",
    "recommendation": "",
    "id": "networking_9064"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Connectivity",
    "title": "Azure provides three models for private network connectivity: VNet injection, VNet Service Endpoints and Private Link:",
    "recommendation": "",
    "id": "networking_9752",
    "children": [
      {
        "title": "VNet injection applies to services that are deployed specifically for you, such as AKS nodes, SQL Managed Instance, Virtual Machines. These resources connect directly to your virtual network.",
        "recommendation": "",
        "id": "networking_3281"
      },
      {
        "title": "[Virtual Network (VNet) service endpoints](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-service-endpoints-overview) provide secure and direct connectivity to Azure services over an optimized route over the Azure backbone network.",
        "recommendation": "",
        "id": "networking_2694",
        "context": "Service Endpoints enable private IP addresses in the VNet to reach the endpoint of an Azure service without needing a public IP address on the VNet."
      },
      {
        "title": "[Private Link](https://docs.microsoft.com/en-us/azure/private-link/private-endpoint-overview#private-link-resource) provides dedicated access using private IP addresses to Azure PaaS instances, or custom services behind an Azure Load Balancer Standard.",
        "recommendation": "",
        "id": "networking_6663"
      },
      {
        "title": "Use Private Link, where available, for shared Azure PaaS services. Private Link is generally available for several services and is in public preview for numerous ones.",
        "recommendation": "",
        "id": "networking_8865"
      },
      {
        "title": "Access Azure PaaS services from on-premises via ExpressRoute private peering.",
        "recommendation": "",
        "id": "networking_1863",
        "context": "Use either virtual network injection for dedicated Azure services or Azure Private Link for available shared Azure services. To access Azure PaaS services from on-premises when virtual network injection or Private Link isn't available, use ExpressRoute with Microsoft peering. This method avoids transiting over the public internet."
      },
      {
        "title": "Use virtual network service endpoints to secure access to Azure PaaS services from within your virtual network, but only when Private Link isn't available and there are no data exfiltration concerns.",
        "recommendation": "",
        "id": "networking_209"
      },
      {
        "title": "Service Endpoints do not allow a PaaS service to be accessed from on-premises networks. Private Endpoints do.",
        "recommendation": "",
        "id": "networking_2652"
      },
      {
        "title": "To address data exfiltration concerns with service endpoints, use NVA filtering or use virtual network service endpoint policies for Azure Storage.",
        "recommendation": "",
        "id": "networking_1191"
      }
    ]
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Connectivity",
    "title": "3rd party NVAs may also be used, should the customer prefer to use NVAs or for situations where native services do not satisfy specific customer requirements.",
    "recommendation": "",
    "id": "networking_7683"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Connectivity",
    "title": "Don't enable virtual network service endpoints by default on all subnets.",
    "recommendation": "",
    "id": "networking_6809"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Connectivity",
    "title": "Don't use virtual network service endpoints when there are data exfiltration concerns, unless you use NVA filtering.",
    "recommendation": "",
    "id": "networking_5342"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Connectivity",
    "title": "We don't recommend that you implement forced tunneling to enable communication from Azure to Azure resources.",
    "recommendation": "",
    "id": "networking_899"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Overlapping IP address spaces across on-premises and Azure regions will create major contention challenges.",
    "recommendation": "",
    "id": "networking_3252"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "While Virtual Network address space can be added after creation, this process will require an outage if the Virtual Network is already connected to another Virtual Network via peering, since the Virtual Network peering will have to be deleted and re-created.",
    "recommendation": "",
    "id": "networking_490",
    "context": "(Note: Modification of address space on peered vnets was announced at Ignite in sept 2020, but no timelines provided. Check the status before discussing with customer.)"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Azure reserves 5 IP addresses within each subnet which should be factored in when sizing Virtual Networks and encompassed subnets.",
    "recommendation": "",
    "id": "networking_7027"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Some Azure services do require [dedicated subnets](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-for-azure-services#services-that-can-be-deployed-into-a-virtual-network), such as Azure Firewall, Azure Bastion or Virtual Network Gateway.",
    "recommendation": "",
    "id": "networking_4156"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Subnets can be delegated to certain services to create instances of that service within the subnet.",
    "recommendation": "",
    "id": "networking_3065"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Use Azure DDoS Standard Protection Plans to protect all public endpoints hosted within customer Virtual Networks.",
    "recommendation": "",
    "id": "networking_1633"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Do not replicate on-premises DMZ concepts and architectures into Azure.",
    "recommendation": "",
    "id": "networking_2195",
    "context": "Customers can get similar security capabilities in Azure as on-premises, but the implementation and architecture will need to be adapted to the cloud."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Azure PaaS services that have been injected into a Virtual Network still perform management plane operations using public IP addresses. Ensure that this communication is locked down within the Virtual Network using UDRs and NSGs.",
    "recommendation": "",
    "id": "networking_4837"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Access Azure PaaS services from on-premises via ExpressRoute Private Peering, using either VNet injection for dedicated Azure services or Azure Private Link for available shared Azure services.",
    "recommendation": "",
    "id": "networking_6463",
    "children": [
      {
        "title": "To access Azure PaaS services from on-premises networks when VNet injection or Private Link are not available, use ExpressRoute with Microsoft Peering when there are no data exfiltration concerns. This would avoid transit over the public internet.",
        "recommendation": "",
        "id": "networking_4826"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Use VNet Service Endpoints to secure access to Azure PaaS services from within a customer VNet, but only when Private Link is not available and when there are no data exfiltration concerns. To address data exfiltration concerns with Service Endpoints:",
    "recommendation": "",
    "id": "networking_2646",
    "children": [
      {
        "title": "Use NVA filtering.",
        "recommendation": "",
        "id": "networking_1402"
      },
      {
        "title": "Use VNet Service Endpoint Policies for Azure Storage.",
        "recommendation": "",
        "id": "networking_2492"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Do not enable VNet Service Endpoints by default on all subnets.",
    "recommendation": "",
    "id": "networking_3505"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "Do not use VNet Service Endpoints when there are data exfiltration concerns, unless NVA filtering is used.",
    "recommendation": "",
    "id": "networking_4580"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "It is strongly recommended to not implement forced tunneling to enable communication from Azure to Azure resources.",
    "recommendation": "",
    "id": "networking_9219"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Virtual Networks",
    "title": "It is vital that enterprise customers plan for IP addressing in Azure to ensure there is no overlapping IP address space across considered on-premises locations and Azure regions.",
    "recommendation": "",
    "id": "networking_5257",
    "children": [
      {
        "title": "Plan for non-overlapping IP address spaces across Azure regions and on-premises locations well in advance.",
        "recommendation": "",
        "id": "networking_2743"
      },
      {
        "title": "Use IP addresses from the address allocation for private internets (RFC 1918).",
        "recommendation": "",
        "id": "networking_3984"
      },
      {
        "title": "For environments with limited private IP addresses (RFC 1918) availability, consider using IPv6.",
        "recommendation": "",
        "id": "networking_4561"
      },
      {
        "title": "Do not create unnecessarily large Virtual Networks (for example: /16) to ensure there is no unnecessary wastage of IP address space.",
        "recommendation": "",
        "id": "networking_2720"
      },
      {
        "title": "Do not create Virtual Networks without planning the required address space in advance, since adding address space will cause an outage once a Virtual Network is connected via Virtual Network Peering.",
        "recommendation": "",
        "id": "networking_1576"
      },
      {
        "title": "Do not use public IP addresses for Virtual Networks, especially if the public IP addresses do not belong to the customer.",
        "recommendation": "",
        "id": "networking_1561"
      }
    ]
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Azure ExpressRoute provides dedicated private connectivity to Microsoft services such as Azure and Office 365 from on-premises locations.",
    "recommendation": "",
    "id": "networking_7057"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Private Link can be used to establish connectivity to PaaS services over ExpressRoute with Private Peering.",
    "recommendation": "",
    "id": "networking_4305"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "When multiple virtual networks are connected to the same ExpressRoute circuit, they will become part of the same routing domain and all virtual networks will share the bandwidth.",
    "recommendation": "",
    "id": "networking_2840"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "ExpressRoute Global Reach (where available) allows customers to connect on-premises locations together using ExpressRoute circuits to transit traffic over the Microsoft backbone network.",
    "recommendation": "",
    "id": "networking_7908"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "ExpressRoute Global Reach is available in many ExpressRoute peering [locations](https://docs.microsoft.com/en-us/azure/expressroute/expressroute-global-reach#availability).",
    "recommendation": "",
    "id": "networking_8343"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "ExpressRoute Direct allows to create multiple ExpressRoute circuits at no additional cost, up to the ExpressRoute Direct port capacity (10G or 100G and allows you to connect directly to Microsoft's ExpressRoute routers).",
    "recommendation": "",
    "id": "networking_5427",
    "children": [
      {
        "title": "For the 100 Gbps SKU, the minimum circuit bandwidth is 5 Gbps.",
        "recommendation": "",
        "id": "networking_6646"
      },
      {
        "title": "For the 10 Gbps SKU, the minimum circuit bandwidth is 1 Gbps.",
        "recommendation": "",
        "id": "networking_2656"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Use ExpressRoute as the primary connectivity channel for connecting on-premises network to Microsoft Azure.    ",
    "recommendation": "",
    "id": "networking_4137",
    "children": [
      {
        "title": "VPNs can be used as a source of backup connectivity to enhance connectivity resiliency.",
        "recommendation": "",
        "id": "networking_3235"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Use dual ExpressRoute circuits from different peering locations when connecting an on-premises location to Virtual Networks in Azure. This setup will ensure redundant paths to Azure, removing single points of failure between on-premises and Azure.",
    "recommendation": "",
    "id": "networking_1282"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "When multiple ExpressRoute circuits are used, [optimize routing](https://docs.microsoft.com/en-us/azure/expressroute/expressroute-optimize-routing) by using BGP local preference and AS Path prepending.",
    "recommendation": "",
    "id": "networking_7830"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Ensure the right SKU is used for the ExpressRoute/VPN Gateways based on bandwidth and performance requirements.",
    "recommendation": "",
    "id": "networking_6080"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Deploy a Zone Redundant ExpressRoute Gateway in the supported Azure regions.",
    "recommendation": "",
    "id": "networking_3038"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "For scenarios that require bandwidth higher than 10Gbps or dedicated 10/100 Gbps ports, use ExpressRoute Direct.",
    "recommendation": "",
    "id": "networking_6618"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "When very low latency is required, or throughput from on-premises to Azure must be greater than 10 Gbps, enable FastPath to bypass the ExpressRoute Gateway from the data path.",
    "recommendation": "",
    "id": "networking_8994"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Use VPN Gateways to connect branches or remote locations to Azure.",
    "recommendation": "",
    "id": "networking_5096",
    "children": [
      {
        "title": "For higher resiliency, deploy Zone-Redundant Gateways (where available).",
        "recommendation": "",
        "id": "networking_3032"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Use ExpressRoute Global Reach to connect large offices /regional headquarters/datacenter that are connected to Azure via ExpressRoute.",
    "recommendation": "",
    "id": "networking_9352"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "When traffic isolation or dedicated bandwidth is required, such as for separating production and non-production environments, different ExpressRoute circuits should be used to ensure isolated routing domains and to mitigate noisy neighbour risks.",
    "recommendation": "",
    "id": "networking_4446"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Proactively monitor ExpressRoute circuits using Network Performance Monitor.",
    "recommendation": "",
    "id": "networking_1739"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "ExpressRoute",
    "title": "Do not explicitly use ExpressRoute circuits from a single peering location as it creates a single point of failure, making the customer likely susceptible to peering location outages.",
    "recommendation": "",
    "id": "networking_5352"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Azure Load Balancer (internal and public) provides high availability for application delivery at a regional level. (Standard tier only)",
    "recommendation": "",
    "id": "networking_9126"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Azure Application Gateway allows the secure delivery of HTTP/S applications at a regional level.",
    "recommendation": "",
    "id": "networking_4593"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Azure Front Door allows the secure, delivery of highly available HTTP/S applications across Azure regions.",
    "recommendation": "",
    "id": "networking_3642"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Azure Traffic manager allows the delivery of applications through DNS redirection, including traffic using protocols other than HTTP/S).",
    "recommendation": "",
    "id": "networking_5332"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Application delivery for both internal and external facing applications should be part of the application. It should not be centrally managed within an organization.",
    "recommendation": "",
    "id": "networking_7817"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "For secure delivery of HTTP/S applications, ensure Web Application Firewall (WAF) protection/policies are enabled. This can be done in either Application Gateway or Front Door.",
    "recommendation": "",
    "id": "networking_8058"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Use a 3rd party Network Virtual Appliance (NVA) if Application Gateway v2 cannot be used for the security of HTTP/S applications.",
    "recommendation": "",
    "id": "networking_569"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Application Gateway v2 or 3rd party NVAs used for inbound HTTP/S connections, should be deployed  in the Virtual Network together with the applications that they are securing. It should not be managed centrally within the organization and shared with other workloads.",
    "recommendation": "",
    "id": "networking_2014"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "All public IP addresses in a the solution should be protected with a DDoS Standard protection plan.",
    "recommendation": "",
    "id": "networking_3573"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Global HTTP/S applications that span Azure regions should be delivered and protected using Azure Front Door with Web Application Firewall (WAF) policies.",
    "recommendation": "",
    "id": "networking_8158"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "When using Azure Front Door and Application Gateway to protect HTTP/S applications, use WAF policies in Front Door and lock down Application Gateway to receive traffic only from Azure Front Door.",
    "recommendation": "",
    "id": "networking_5364",
    "context": "While this is the general recommendation, certain scenarios might force a customer to implement rules specifically on AppGateway: For example, if ModSec CRS 2.2.9, CRS 3.0 or CRS 3.1 rules are required, this can only be implemented on AppGatway. Conversely, rate-limiting and geo-filtering are available only on Azure Front Door, not on AppGateway. Instructions on how to lock down traffic can be found [here](https://docs.microsoft.com/en-us/azure/frontdoor/front-door-faq#how-do-i-lock-down-the-access-to-my-backend-to-only-azure-front-door)"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Global applications that span protocols other than HTTP/S should be delivered using Azure Traffic Manager. Traffic manager does not forward traffic, but only performs DNS redirection. This means that the connection from the client is established directly to the target using any protocol.",
    "recommendation": "",
    "id": "networking_1793"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "When doing global loadbalancing for HTTP/S applications, Front Door is preferred over Traffic Manager. This is because, amongst others:  ",
    "recommendation": "",
    "id": "networking_3742",
    "children": [
      {
        "title": "Azure Front Door optimizes the number of TCP connections to the backend when forwarding traffic",
        "recommendation": "",
        "id": "networking_8092"
      },
      {
        "title": "Changes to the routing configuration, e.g. based on backend health, are instantaneous. With Traffic Manager, traffic will point to the original backend until a new DNS lookup is performed, plus potential time for DNS propagation.",
        "recommendation": "",
        "id": "networking_8381"
      },
      {
        "title": "Front Door supports caching on global edge nodes, negating the need for a separate CDN service",
        "recommendation": "",
        "id": "networking_3137"
      },
      {
        "title": "Front Door supports Web Application Firewall rules, negating the need for a separate WAF service",
        "recommendation": "",
        "id": "networking_864"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Enable health probes for backends.",
    "recommendation": "",
    "id": "networking_5465",
    "context": "Health probes are http(s) endpoints that are queried by the load balancer (Azure Front Door, Traffic Manager, AppGateway) service to determine if the backend is healthy enough to handle requests."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Create a separate health endpoint on the backend to be used by the health probe, that can aggregate the state of the critical services and dependencies needed to serve requests.",
    "recommendation": "",
    "id": "networking_7120",
    "context": "More information on creating such an endpoint can be found [here](https://docs.microsoft.com/en-us/azure/architecture/patterns/health-endpoint-monitoring)."
  },
  {
    "type": "Design Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "In new deployments, use Application Gateway v2 unless there is a compelling reason to use v1.",
    "recommendation": "",
    "id": "networking_8111"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Deploy at least two AppGateway v2 instances to increase availability",
    "recommendation": "",
    "id": "networking_8172"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "When using Azure Front Door and Application Gateway to protect HTTP/S applications, use WAF policies in Front Door and lock down Application Gateway to receive traffic only from Azure Front Door.",
    "recommendation": "",
    "id": "networking_6215",
    "context": "While this is the general recommendation, certain scenarios might force a customer to implement rules specifically on AppGateway: For example, if ModSec CRS 2.2.9, CRS 3.0 or CRS 3.1 rules are required, this can only be implemented on AppGatway. Conversely, rate-limiting and geo-filtering are available only on Azure Front Door, not on AppGateway."
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Front Door",
    "title": "Use Azure Front Door WAF policies to provide global protection across Azure regions for inbound HTTP/S connections to a \"Landing Zone\".",
    "recommendation": "",
    "id": "networking_4367"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Front Door",
    "title": "When using Azure Front Door and Application Gateway to protect HTTP/S applications, use WAF policies in Front Door and lock down Application Gateway to receive traffic only from Azure Front Door.",
    "recommendation": "",
    "id": "networking_9105",
    "context": "While this is the general recommendation, certain scenarios might force a customer to implement rules specifically on AppGateway: For example, if ModSec CRS 2.2.9, CRS 3.0 or CRS 3.1 rules are required, this can only be implemented on AppGatway. Conversely, rate-limiting and geo-filtering are available only on Azure Front Door, not on AppGateway. Instructions on how to lock down traffic can be found [here](https://docs.microsoft.com/en-us/azure/frontdoor/front-door-faq#how-do-i-lock-down-the-access-to-my-backend-to-only-azure-front-door)"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Front Door",
    "title": "Create a rule to block access to the health endpoint from the Internet",
    "recommendation": "",
    "id": "networking_9641"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Front Door",
    "title": "Front Door currently does not support SSL passthrough, this means Front Door must hold the certificate to terminate the encrypted inbound connection. Ensure that the connection to the back-end is re-encrypted.",
    "recommendation": "",
    "id": "networking_8792"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Loadbalancer",
    "title": "For production workloads, use the Standard SKU. Basic loadbalancers do not have an SLA. Additionally, the Standard SKU [supports Availability Zones](https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-standard-availability-zones).",
    "recommendation": "",
    "id": "networking_2314"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Traffic Manager",
    "title": "When a backend becomes unavailable, Traffic Manager will not fail over to another region immediately. There will be a time interval where clients cannot be served. The length of this interval depends on",
    "recommendation": "",
    "id": "networking_4443",
    "children": [
      {
        "title": "The time settings of the health probe (probe interval and the number and the number of unhealthy responses allowed)",
        "recommendation": "",
        "id": "networking_8641"
      },
      {
        "title": "The TTL of the DNS record. By default this is 5 minutes. If this time interval is too long, consider adjusting the health probe timing or DNS record TTL. If the resulting interval is still too large for the scenario at hand, consider switching to Azure Front Door for global loadbalancing.",
        "recommendation": "",
        "id": "networking_4473"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "API Management",
    "title": "[Secure the communication](https://docs.microsoft.com/en-us/azure/api-management/api-management-faq#how-can-i-secure-the-connection-between-the-api-management-gateway-and-my-back-end-services) between API Management and your backend.",
    "recommendation": "",
    "id": "networking_7064"
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "API Management",
    "title": "When exposing APIs to third parties, ensure that",
    "recommendation": "",
    "id": "networking_4433",
    "children": [
      {
        "title": "Each party has its own credential",
        "recommendation": "",
        "id": "networking_7054"
      },
      {
        "title": "Quotas and rate limits have been set",
        "recommendation": "",
        "id": "networking_5024"
      }
    ]
  },
  {
    "type": "Configuration Recommendations",
    "pillars": [
      "costoptimization"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Application Delivery (General)",
    "title": "Select SKU for service so that it does the job required and that allows the customer to grow as the workload evolves.",
    "children": [
      {
        "title": "**Load balancer**: 2 SKUs (basic – free and standard – fee based). We recommend standard because it has richer capabilities (outbound rules, granular network security config, monitoring, etc), provides SLA and can be deployed in AZs. Capabilities in basic are limited.",
        "id": "networking_efficient_skus_1"
      },
      {
        "title": "**App Gateway**: Basic or V2.",
        "id": "networking_efficient_skus_2"
      },
      {
        "title": "**Gateways**: limit throughput, performance, etc.",
        "id": "networking_efficient_skus_3"
      },
      {
        "title": "**DDOS Standard**: gives protection for their workload types and how their patterns are. Otherwise you can use the basic (i.e. for small customers).",
        "id": "networking_efficient_skus_4"
      }
    ],
    "id": "networking_efficient_skus"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "costoptimization"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Virtual Appliances (NVA)",
    "title": "There's a difference between using a third party app (NVA) an Azure native service (Firewall or Application Gateway).",
    "children": [
      {
        "title": "With managed PaaS services such as Azure Firewall or Application Gateway, Microsoft handles the management of the service and the underlying infrastructure. Using NVAs, which usually have to be deployed on VMs (IaaS), the customer has to handle the management operations (such as patching and updating) of that VM and the appliance on top. Managing 3rd party services also usually mean using specific vendor tools - integration can become difficult.",
        "id": "networking_cost_nva_1"
      },
      {
        "title": "Some of the costs for networking services are not obvious for customers.",
        "id": "networking_cost_nva_2"
      }
    ],
    "id": "networking_cost_nva"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "costoptimization"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Network Connectivity",
    "title": "Running cost of services (services are metered – pay for service itself and consumption on service)",
    "children": [
      {
        "title": "VNET Peering Cost – customers start putting everything in 1 VNET for example to save costs but that’s preventing them from growing because they will reach a point that they can’t fit everything in one VNET.",
        "id": "networking_metered_cost_1"
      },
      {
        "title": "If you have 2 VNETs that are peered and you want to access a private endpoint – you pay only for private endpoint access and not VNET peering cost.",
        "id": "networking_metered_cost_2"
      },
      {
        "title": "Azure Firewall is also metered (pay for instance and for usage) – same for load balancers.",
        "id": "networking_metered_cost_3"
      }
    ],
    "id": "networking_metered_cost"
  },
  {
    "type": "Configuration Recommendation",
    "pillars": [
      "costoptimization"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "IP Addresses",
    "title": "PIPs (Public IPs) are free unless you don’t use them – if they aren’t assigned to anything you will pay for it.",
    "context": "There should be a process to look for orphan NICs and PIPs that are not being used in production and non-production.",
    "id": "networking_cost_orphan_nic"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Review underutilized resources",
    "recommendation": "",
    "id": "networking_628",
    "context": "Identify and delete Application Gateways with empty backend pools. "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Stop Application Gateways when they are not used",
    "recommendation": "",
    "id": "networking_3674",
    "context": "You can stop Azure Application Gateways, for example, in dev/test environments after business hours. This will incur in savings, as you will not be charged while Application Gateway is stopped. You can refer to the following articles to how to stop and start an Application Gateway."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Have a scale-in and scale-out policy",
    "recommendation": "",
    "id": "networking_9507",
    "context": "Having both a scale-in and a scale-out policy ensures that there will be enough instances to handle incoming traffic, but that the number of instances is also reduced when possible. https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-autoscaling-zone-redundant#pricing"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Review consumption metrics across different parameters",
    "recommendation": "",
    "id": "networking_3890",
    "context": "You can view the amount of consumption for different parameters (compute unit, throughput & persistent connections) as well as the Capacity Units being utilized as part of the Application Gateway metrics under the Monitoring section. This information can be used to validate that the provisioned instance count matches the amount of incoming traffic. "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Use Application Gateway v2 SKU for its autoscaling capabilities and performance benefits.",
    "recommendation": "",
    "id": "networking_7590",
    "context": "The v2 SKU offers autoscaling to ensure that your Application Gateway can scale up as traffic increases. It also offers other significant performance benefits, such as 5x better TLS offload performance, quicker deployment and update times, zone redundancy, and more when compared to v1. For more information, see our v2 documentation and see our v1 to v2 migration documentation to learn how to migrate your existing v1 SKU gateways to v2 SKU."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Approximating the Application Gateway Instance count",
    "recommendation": "",
    "id": "networking_8799",
    "context": "Application Gateway v2 scales out depending on a variety of factors, including but not limited to CPU, memory, and network utilization. To determine the approximate instance count, the customer can look at the following metrics:�        Compute Units � This is an indicator of CPU utilization. 1 Application Gateway instance is approximately 10 compute units�        Throughput � Application Gateway instance can support 60 to 75 MBps of throughput. This will vary depending on the type of payload the customer has. Eq. 1: Approximate instance count =  Once the customer has approximated the instance count, they can compare to their maximum instance count to determine how close to they are to reaching the maximum available capacity. "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Understand Application Gateway autoscaling trends",
    "recommendation": "",
    "id": "networking_3453",
    "context": "The autoscale algorithm scales out aggressively, so it is possible that actual instance count could be greater than target instance count. If the actual instance count is greater than the target instance count, then Application Gateway will slowly scale down to reach the target instance count eventually. These metrics in general are best used for determining the general trend of Application Gateway�s scaling capabilities in response to different workloads to the Application Gateway."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Define the minimum instance count",
    "recommendation": "",
    "id": "networking_745",
    "context": "For Application Gateway v2 SKU, autoscaling takes six to seven minutes to scale out and provision additional set of instances ready to take traffic. Until then, if there are short spikes in traffic, your existing gateway instances might get under stress and this may cause unexpected latency or loss of traffic.It is recommended that you set your minimum instance count to an optimal level. Once you calculate the average approximate instance count, as well as you determine your Application Gateway autoscaling trends, you can define the minimum instance count based on your application patterns. As described in the Approximating Application Gateway Instance count section, check your Current Compute Units metric for the past one month. Compute unit metric is a representation of your gateway's CPU utilization and based on your peak usage divided by 10, you can set the minimum number of instances required. For example, if your Current Compute Units avg over the past month is 50, you would set the Application Gateway minimum instance count to 5."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Define the maximum instance count",
    "recommendation": "",
    "id": "networking_7120",
    "context": "We suggest having 125 as the maximum autoscale instance limit, so the gateway can be scaled out at any time. This maximum has no implications on billing, as the customer is always charged only for the capacity they actually consume. When setting the maximum instance count to 125, ensure that the subnet that the Application Gateway is deployed in has at enough available IP addresses in case Application Gateway does scales all the way up."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Define Application Gateway subnet size",
    "recommendation": "",
    "id": "networking_8251",
    "context": "An application gateway is a dedicated deployment in your virtual network. Within your virtual network, a dedicated subnet is required for the application gateway. You can have multiple instances of a given application gateway deployment in a subnet. You can also deploy other application gateways (of the same SKU) in the subnet.The following considerations will help you to define the correct size for the Application Gateway subnet based on your scenario:�        Application Gateway uses one private IP address per instance, plus another private IP address if a private front-end IP is configured.�        Azure also reserves five IP addresses in each subnet for internal use: the first four and the last IP addresses.�        Application Gateway (Standard or WAF) SKU can support up to 32 instances (32 instance IP addresses + 1 private front-end IP + 5 Azure reserved) � so a minimum subnet size of /26 is recommended.�        Application Gateway (Standard_v2 or WAF_v2 SKU) can support up to 125 instances (125 instance IP addresses + 1 private front-end IP + 5 Azure reserved) � so a minimum subnet size of /24 is recommended o   should we change this to /27 or /28 min required?? A /29 fails �{\"code\":\"DeploymentFailed\",\"message\":\"At least one resource deployment operation failed. Please list deployment operations for details. Please see https://aka.ms/DeployOperations for usage details.\",\"details\":[{\"code\":\"ApplicationGatewaySubnetDoesNotHaveEnoughCapacity\",\"message\":\"Subnet /subscriptions/f31b0350-72a9-4843-96c1-b93515783b91/resourceGroups/appgtw/providers/Microsoft.Network/virtualNetworks/east-vnet/subnets/app-gtw-29 used for Application Gateway /subscriptions/f31b0350-72a9-4843-96c1-b93515783b91/resourceGroups/appgtw/providers/Microsoft.Network/applicationGateways/ivgtw does not have enough capacity. Required capacity is at least 10, currently available capacity in subnet is 3.\"}]}�.�        If you are intending to deploy additional Application Gateways in the same subnet, consider the additional IP addresses that will be required for their maximum instance count for both, Standard and Standard v2."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Monitoring Application Gateway � Capacity metrics",
    "recommendation": "",
    "id": "networking_6150",
    "context": "The following metrics can be used by the customer as indicators of utilization of provisioned Application Gateway capacity. Alerts can be set as needed by the customers to get notifications once a threshold has been reached for any metric.Metric Name Explanation Use case Current Compute UnitsCPU utilization of Application gateway VM. One Application Gateway instance supports 10 Compute Units. This will help catch issues where customer is sending more traffic than what Application Gateway instances can handle.  Throughput The amount of traffic (in Bps) that is served by Application Gateway.Directly measures the amount of traffic served by Application Gateway. This threshold is dependent on the payload size. For smaller payloads but more frequent connections, the throughput limits will be lower, and alert should be adjusted accordingly. Current Connections TCP connections currently active on Application Gateway.  This will help catch issues where the connection count increases beyond the capacity of Application gateway. Look for a capacity unit drop during the increase in new connection count to identify if Application Gateway is out of capacity. "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Use Metrics for troubleshooting",
    "recommendation": "",
    "id": "networking_251",
    "context": "Application Gateway exposes a few other metrics for troubleshooting that can be used as indicators of issues either at Application Gateway or the backend. We recommend evaluating alerts as per the table below.Metric Name Explanation Use case Unhealthy Host Count Indicates number of backends that Application Gateway is unable to probe successfully. This will catch issues where Application Gateway instances are unable to connect to the backend. Based on probe settings (example: probe interval is 10 seconds, unhealthy host count threshold is 3 failed probes), a backend will turn unhealthy if Application Gateway instance is not able to reach it for 30 seconds (depends on the configured timeout and interval in the custom probe). Response Status (dimension 4xx and 5xx) The HTTP response status returned to clients from Application Gateway itself. This will be usually the same as Backend Response status unless:a) Application Gateway is unable to get a response from the backend or b) Application Gateway has an internal error in serving responses.  This metric indicates issues either with Application Gateway or backend. This metric in conjunction with Backend Response status (see below) can be used to identify whether Application Gateway or the backend is failing to serve requests.  Backend Response Status (dimension 4xx and 5xx) The HTTP response status returned to Application Gateway from the backend.  Can be used to validate if the backend is successfully receiving requests and serving responses.  Backend Last Byte Response TimeTime interval between start of establishing a connection to backend server and receiving the last byte of the response body. Increase in this latency implies that the backend is getting loaded and is taking longer to respond to requests. Action item would be to scale up the backend.Application Gateway Total TimeThis is the interval from the time when Application Gateway receives the first byte of the HTTP request to the time when the last response byte has been sent to the client.  Note: includes client RTTIncrease in this latency, without any accompanying application changes or access traffic pattern changes should be cause for investigation. If this metric is increasing, closely monitor the metrics above to determine if anything is rising like compute units, total throughput, or total request count. "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Turn on diagnostics on Application Gateway and WAF",
    "recommendation": "",
    "id": "networking_1985",
    "context": "Diagnostic logs allow you to view firewall logs, performance logs, and access logs. You can use these logs in Azure to manage and troubleshoot Application Gateways."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Use Advanced Monitoring Metrics",
    "recommendation": "",
    "id": "networking_9473",
    "context": "In addition to the throughput data offered, consider configuring monitoring and alerting on metrics like Unhealthy Hosts, Latency and the number of connections and requests. Notice the difference between connections and requests: On connection represents the TCP connection (sockets pair), while a requests represents a resource request, ie, a GET/PUT,POST, etc. One connection can serve multiple requests (on AppGW v2, up to 100)."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "When using App Gateway as ingress controller, enable AKS Diagnostic Settings with a storage account",
    "recommendation": "",
    "id": "networking_1746",
    "context": "TODO Add explanation here"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Ensure that your App Gateway and the AKS cluster's nodes are on the same VNET. ",
    "recommendation": "",
    "id": "networking_5333",
    "context": "It is not required for the Pods to be on the same VNet as App Gateway Ensure you understand the current App Gateway limitsHttp content limits:maxAllowedContentLength (Bytes): 2147483647 (2MB)maxQueryString (Bytes) = 4096maxUrl (Bytes): 2048 https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-subscription-service-limits#application-gateway-limits"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Test health probes and ensure you have the correct rules configured (AppGW V2 only)",
    "recommendation": "",
    "id": "networking_32",
    "context": "(need to add why and how)"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Match timeout settings to backend application",
    "recommendation": "",
    "id": "networking_7502",
    "context": "Ensure you have configured the IdleTimeout settings to match the listener and traffic characteristics of the backend application. The default value is set to 4 minutes and can be configured to a maximum of 30. https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-tcp-reset"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Plan for rule updates based on timing of when rule is deployed vs applied vs available (reduce 502s) ",
    "recommendation": "",
    "id": "networking_7206",
    "context": "(fast path updates vs slow path updates??)\r\nGuidance: plan to provide enough time for updates to take place before accessing AppGW or making further changes(add some examples however do not add specific timings)."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Use health probes to detect backend unavailability",
    "recommendation": "",
    "id": "networking_5369",
    "context": "In case AppGateway is used to load balance incoming traffic over multiple backend instances, it is recommended to implement health probes. These will ensure that traffic is not routed to backends that are unable to handle the traffic. "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Understand the impact of the Interval and Threshold settings on Health Probes",
    "recommendation": "",
    "id": "networking_757",
    "context": "The health probe will send requests to the provided endpoint on a set interval. Additionally, there is a threshold of failed requests that will be tolerated before the backend is marked unhealthy. These numbers present a trade-off: Setting a higher interval puts a higher load on your service (each AppGateway instance sends its own health probes, so 100 instances every 30 seconds means 100 requests per 30 seconds) but setting a lower interval will leave more time before an outage is detected. Similarly, setting a low unhealthy threshold may mean that short, transient failures may take out a backend. Setting this number too high again means it can take longer to take a backend out of rotation."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Verify downstream dependencies via Health Endpoints",
    "recommendation": "",
    "id": "networking_6928",
    "context": "In a more advanced scenario, each backend also has its own dependencies to ensure failures are isolated. For example, an API hosted behind AppGateway may have multiple backends, each connected to a different database (replica). When such a dependency fails, the API app may be working but will not return valid results. For that reason, the health endpoint should ideally validate all dependencies. Keep in mind that if each call to the health endpoint has a direct dependency call, that database would receive 100 queries every 30 seconds instead of 1. To avoid this, the health endpoint should cache the state of the dependencies for a short period of time. See Health monitoring overview for Azure Application Gateway | Microsoft Docs and Azure Front Door - backend health monitoring | Microsoft Docs and Health probes to scale and provide HA for your service - Azure Load Balancer | Microsoft Docs"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Ensure that custom domain labels do not expose internal names ",
    "recommendation": "",
    "id": "networking_5216",
    "context": "If the customer does not choose a label, then the current naming scheme is used (GUID.cloudapp.net� generated by RDFE) � add information about information disclosure"
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Understand the restrictions of NSGs on App Gateway",
    "recommendation": "",
    "id": "networking_7610",
    "context": "Network Security Groups (NSGs) � NSGs are supported on Application Gateway, but there are some restrictions as documented on the following article. "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Do not use User Defined Routes on the App Gateway subnet",
    "recommendation": "",
    "id": "networking_2626",
    "context": "Using User Defined Routes (UDR) on the Application Gateway subnet might cause the health status in the back-end health view to appear as Unknown. It also might cause generation of Application Gateway logs and metrics to fail. We recommend that you don't use UDRs on the Application Gateway subnet so that you can view the back-end health, logs, and metrics. If your organizations require to use UDR in the Application Gateway subnet, please ensure you review the supported scenarios."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Understand DNS lookups on App Gateway subnet",
    "recommendation": "",
    "id": "networking_4693",
    "context": "When the backend pool contains a resolvable FQDN, the DNS resolution is based on a private DNS zone or custom DNS server (if configured on the VNet), or it uses the default Azure-provided DNS."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Set up an TLS policy for extra security",
    "recommendation": "",
    "id": "networking_5295",
    "context": "Set up a TLS policy for extra security. Ensure you're using the latest TLS policy version (AppGwSslPolicy20170401S). This enforces TLS 1.2 and stronger ciphers."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Use AppGateway for TLS Termination",
    "recommendation": "",
    "id": "networking_1063",
    "context": "Using AppGateway for TLS termination to benefit from a number of advantages: Improved Performance because requests going to different backends to have to re-authenticate to each backend, better utilization of backend servers since they don't have to perform TLS processing, intelligent routing by accessing the request content and easier certificate management since the certificate only needs to be installed on AppGateway. "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "When re-encrypting backend traffic, ensure the backend server certificate contains both the root and intermediate CAs.",
    "recommendation": "",
    "id": "networking_9",
    "context": "In order for a TLS/SSL certificate to be trusted, that certificate of the backend server must have been issued by a CA that is well-known. If the certificate was not issued by a trusted CA, the application gateway will then check to see if the certificate of the issuing CA was issued by a trusted CA, and so on until either a trusted CA is found (at which point a trusted, secure connection will be established) or no trusted CA can be found (at which point the application gateway will mark the backend unhealthy)."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Use Azure Key Vault for storing TLS certificates",
    "recommendation": "",
    "id": "networking_7083",
    "context": "Using Key Vault integration offers stronger security, easier separation of duties (app dev / security), support for managed certificates and an easier certificate renewal and rotation process."
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Understand the impact of enabling the Web Application Firewall",
    "recommendation": "",
    "id": "networking_5551",
    "context": "When Web Application Firewall (WAF) is enabled, every request must be buffered by the Application Gateway until it fully arrives and check if the request matches with any rule violation in its core rule set and then forward the packet to the backend instances. This is also the case with large file uploads (30MB+ in size) and results in a latency that can be significant.  "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Become familiar with the OWASP policies",
    "recommendation": "",
    "id": "networking_4219",
    "context": "AppGwv1 RuleSets of OWASP 3.0, OWASP 2.2.9. AppGwv2 Rulesets support OWASP 3.1, 3.0, 2.2.9, and \"Microsoft_BotManageRuleSet 0.1\". "
  },
  {
    "type": "Design Considerations",
    "pillars": [
      "reliability",
      "operationalexcellence"
    ],
    "lens": "service",
    "category": "Networking",
    "subCategory": "Azure Application Gateway",
    "title": "Understand the WAF ruleset",
    "recommendation": "",
    "id": "networking_289",
    "context": "Understand the WAF rule set, configuration and scoring. Currently Azure Application Gateway WAF uses the modSecurity Core Rule Set (CRS) v2.2.6."
  }
]